name: main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      # 1) Start Minikube on the GitHub Actions runner
      - name: Start Minikube
        uses: medyagh/setup-minikube@latest

      # 2) Build the Docker image inside Minikube
      - name: Build Docker image inside Minikube
        run: |
          eval $(minikube docker-env)
          minikube image build -t rick-and-morty-app:latest .

      # 3) Deploy the application using kubectl
      - name: Deploy using kubectl
        run: |
          kubectl apply -f yamls/Deployment.yaml
          kubectl apply -f yamls/Service.yaml
          kubectl apply -f yamls/Ingress.yaml

      # 4) Wait for Deployment to be Ready
      - name: Wait for Deployment to be Ready
        run: |
          kubectl rollout status deployment/rick-and-morty-deployment --timeout=120s
          kubectl get pods

      # 5) Expose Service Using Port Forwarding
      - name: Start Port Forwarding
        run: |
          kubectl port-forward svc/rick-and-morty-service 5000:80 &
          sleep 5

      # 6) Run Tests
      - name: Test API Endpoints
        run: |
          API_URL="http://localhost:5000"
          echo "Testing API at $API_URL"

          # Test healthcheck
          curl -f "$API_URL/healthcheck"

          # Test characters endpoint
          curl -f "$API_URL/characters"

      # 7) Dump logs if deployment fails
      - name: Show Logs on Failure
        if: failure()
        run: |
          echo "=== Kubernetes Resources ==="
          kubectl get all -A
          echo "=== Pod Descriptions ==="
          kubectl describe pods
          echo "=== Application Logs ==="
          kubectl logs -l app=rickandmorty --all-containers --tail=100
